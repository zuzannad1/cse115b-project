{"version":3,"sources":["ActionGroup.tsx"],"names":["React","StyleSheet","Text","Image","View","ScrollView","TouchableNativeFeedbackSafe","BLACK_54PC_TRANSPARENT","BLACK_87PC_TRANSPARENT","DESTRUCTIVE_COLOR","ActionGroup","_renderRowSeparator","key","styles","rowSeparator","props","separatorStyle","_renderTitleContent","title","titleTextStyle","message","messageTextStyle","showSeparators","titleContainer","paddingBottom","_renderIconElement","iconSource","color","tintIcons","iconStyle","icon","tintColor","undefined","_renderOptionViews","options","icons","destructiveButtonIndex","onSelect","startIndex","length","textStyle","optionViews","nativeFeedbackBackground","Ripple","i","defaultColor","push","button","text","groupContainer","containerStyle","Component","defaultProps","create","justifyContent","alignItems","flexDirection","height","paddingHorizontal","backgroundColor","overflow","width","marginRight","marginTop","fontSize","textAlignVertical","padding","paddingTop"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { StyleSheet, Text, Image, View, ScrollView } from 'react-native';\nimport TouchableNativeFeedbackSafe from './TouchableNativeFeedbackSafe';\nimport { ActionSheetOptions } from '../types';\n\ntype Props = ActionSheetOptions & {\n  tintIcons: boolean | null;\n  onSelect: (i: number) => boolean;\n  startIndex: number;\n  length: number;\n};\n\nconst BLACK_54PC_TRANSPARENT = '#0000008a';\nconst BLACK_87PC_TRANSPARENT = '#000000de';\nconst DESTRUCTIVE_COLOR = '#d32f2f';\n\nexport default class ActionGroup extends React.Component<Props> {\n  static defaultProps = {\n    title: null,\n    message: null,\n    showSeparators: false,\n    tintIcons: true,\n    textStyle: {},\n  };\n\n  render() {\n    return (\n      <View style={[styles.groupContainer, this.props.containerStyle]}>\n        {this._renderTitleContent()}\n        <ScrollView>{this._renderOptionViews()}</ScrollView>\n      </View>\n    );\n  }\n\n  _renderRowSeparator = (key: string | number) => {\n    return (\n      <View key={`separator-${key}`} style={[styles.rowSeparator, this.props.separatorStyle]} />\n    );\n  };\n\n  _renderTitleContent = () => {\n    const { title, titleTextStyle, message, messageTextStyle, showSeparators } = this.props;\n\n    if (!title && !message) {\n      return null;\n    }\n\n    return (\n      <View>\n        <View style={[styles.titleContainer, { paddingBottom: showSeparators ? 24 : 16 }]}>\n          {!!title && <Text style={[styles.title, titleTextStyle]}>{title}</Text>}\n          {!!message && <Text style={[styles.message, messageTextStyle]}>{message}</Text>}\n        </View>\n        {!!showSeparators && this._renderRowSeparator('title')}\n      </View>\n    );\n  };\n\n  _renderIconElement = (iconSource: React.ReactNode | null, color: string) => {\n    const { tintIcons } = this.props;\n    if (!iconSource) {\n      return null;\n    }\n\n    if (typeof iconSource === 'number') {\n      const iconStyle = [styles.icon, { tintColor: tintIcons ? color : undefined }];\n      return <Image fadeDuration={0} source={iconSource} resizeMode=\"contain\" style={iconStyle} />;\n    } else {\n      return <View style={styles.icon}>{iconSource}</View>;\n    }\n  };\n\n  _renderOptionViews = () => {\n    const {\n      options,\n      icons,\n      destructiveButtonIndex,\n      onSelect,\n      startIndex,\n      length,\n      textStyle,\n      tintColor,\n      showSeparators,\n    } = this.props;\n    const optionViews: React.ReactNode[] = [];\n    const nativeFeedbackBackground = TouchableNativeFeedbackSafe.Ripple(\n      'rgba(180, 180, 180, 1)',\n      false\n    );\n\n    for (let i = startIndex; i < startIndex + length; i++) {\n      const defaultColor = tintColor\n        ? tintColor\n        : (textStyle || {}).color || BLACK_87PC_TRANSPARENT;\n      const color = i === destructiveButtonIndex ? DESTRUCTIVE_COLOR : defaultColor;\n      const iconSource = icons != null ? icons[i] : null;\n\n      optionViews.push(\n        <TouchableNativeFeedbackSafe\n          key={i}\n          pressInDelay={0}\n          background={nativeFeedbackBackground}\n          onPress={() => onSelect(i)}\n          style={styles.button}>\n          {this._renderIconElement(iconSource, color)}\n          <Text style={[styles.text, textStyle, { color }]}>{options[i]}</Text>\n        </TouchableNativeFeedbackSafe>\n      );\n\n      if (showSeparators && i < startIndex + length - 1) {\n        optionViews.push(this._renderRowSeparator(i));\n      }\n    }\n\n    return optionViews;\n  };\n}\n\nconst styles = StyleSheet.create({\n  button: {\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    flexDirection: 'row',\n    height: 56,\n    paddingHorizontal: 16,\n  },\n  groupContainer: {\n    backgroundColor: '#ffffff',\n    overflow: 'hidden',\n  },\n  icon: {\n    width: 24,\n    height: 24,\n    marginRight: 32,\n  },\n  message: {\n    marginTop: 12,\n    fontSize: 14,\n    color: BLACK_54PC_TRANSPARENT,\n    textAlignVertical: 'center',\n  },\n  rowSeparator: {\n    backgroundColor: '#dddddd',\n    height: 1,\n    width: '100%',\n  },\n  text: {\n    fontSize: 16,\n    color: BLACK_87PC_TRANSPARENT,\n    textAlignVertical: 'center',\n  },\n  title: {\n    fontSize: 16,\n    color: BLACK_54PC_TRANSPARENT,\n    textAlignVertical: 'center',\n  },\n  titleContainer: {\n    alignItems: 'flex-start',\n    padding: 16,\n    paddingTop: 24,\n  },\n});\n"]}